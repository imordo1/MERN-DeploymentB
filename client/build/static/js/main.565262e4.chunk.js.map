{"version":3,"sources":["Components/NewPet.js","Components/PetList.js","Components/OnePet.js","Components/EditPet.js","App.js","index.js"],"names":["NewPet","props","useState","name","setName","age","setAge","description","setDescription","type","setType","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","nameErrors","setNameErrors","setAgeErrors","setDescriptionErrors","typeErrors","setTypeErrors","skill1Errors","skill2Errors","skill3Errors","history","useHistory","className","onSubmit","e","preventDefault","target","key","value","length","newPet","axios","post","then","res","console","log","data","push","catch","err","errorResponse","response","errorArr","Object","keys","message","handleNewPetSubmit","map","index","style","color","onChange","PetList","allPets","setAllPets","useEffect","get","pet","to","_id","onClick","petId","delete","filter","id","likes","undefined","editedPet","like","put","updatedPet","updatedPets","handleLikeClick","cursor","outline","LikeCount","Pet","setPet","useParams","src","alt","EditPet","handleOnChange","keyBeingUpdated","newValue","handleEditSubmit","App","exact","from","path","OnePet","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.565262e4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst NewPet = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");;\r\n    const [type, setType] = useState(\"\");;\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n\r\n\r\n\r\n    //Create an array to store errors from the API\r\n    const [errors, setErrors] = useState([]); \r\n    // Error fields\r\n    const [nameErrors, setNameErrors] = useState(\"\");\r\n    const [ageErrors, setAgeErrors] = useState(\"\");\r\n    const [descriptionErrors, setDescriptionErrors] = useState(\"\");\r\n    const [typeErrors, setTypeErrors] = useState(\"\");\r\n\r\n    const [skill1Errors, setSkill1Errors] = useState(\"\");\r\n    const [skill2Errors, setSkill2Errors] = useState(\"\");\r\n    const [skill3Errors, setSkill3Errors] = useState(\"\");\r\n  // Used for routing the user to a new url.\r\n    const history = useHistory();\r\n\r\n  const handleNewPetSubmit = (e) => {\r\n    e.preventDefault(); // Stop the page refresh.// The default form behavior is submitting the information to the route in the \"action\" which causes a page load. We want to handle this information ourselves.\r\n        const { name: key , value} = e.target;\r\n    \r\n        if (key === 'name') {\r\n            setName(value);\r\n            if(value.length < 2) {\r\n                setNameErrors(\"Name must be at least 2 characters\");\r\n            } else {\r\n                setNameErrors(\"\");\r\n            }\r\n        } else if (key === 'age') {\r\n            setAge(value);\r\n            if(value.length < 2) {\r\n                setAgeErrors(\"Age must be at least 2 characters\");\r\n            } else {\r\n                setAgeErrors(\"\");\r\n            }\r\n        } else if (key === 'description') {\r\n            setDescription(value);\r\n            if(value.length < 5) {\r\n                setDescriptionErrors(\"Description name must be at least 5 characters\");\r\n            } else {\r\n                setDescriptionErrors(\"\");\r\n            }\r\n        } else if (key === 'type') {\r\n            setDescription(value);\r\n            if(value.length < 5) {\r\n                setTypeErrors(\"Type name must be at least 5 characters\");\r\n            } else {\r\n                setTypeErrors(\"\");\r\n            }\r\n        }\r\n    const newPet = {\r\n      name,\r\n      age,\r\n      description,\r\n      type,\r\n      skill1,\r\n      skill2,\r\n      skill3\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/pets/\", newPet)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // Route user to the new destination's page.\r\n        history.push(`/`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n        const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n      <body className = \"container d-flex\">\r\n    <div className=\" d-flex col col-8 flex-column container p-3 my-3 bg-dark text-white rounded shadow\">\r\n      <h3 className=\"text-center\">Know a pet needing a home?</h3>\r\n\r\n\r\n{/* --------------------- FORM SUBMIT -------------------------------- */}\r\n      <form\r\n        onSubmit={(e) => {\r\n          handleNewPetSubmit(e);\r\n        }}\r\n      >\r\n        {/* // adding validation messages */}\r\n        {errors.map((err, index) => \r\n          <p style={{color: \"red\"}} key={index}>{err}</p>)}\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Name</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          \r\n          { nameErrors ? <p >{nameErrors}</p> : \"\"} \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Age</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setAge(e.target.value);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Type</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setType(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          \r\n          { typeErrors ? <p >{typeErrors}</p> : \"\"} \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Description</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setDescription(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        {/* ---------------------- SKILLLLS ---------------------------- */}\r\n        <h3 className=\"text-center\">Skills (optional)</h3>\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Skill 1</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setSkill1(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          \r\n          { skill1Errors ? <p >{skill1Errors}</p> : \"\"} \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Skill 2</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setSkill2(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          { skill2Errors ? <p >{skill2Errors}</p> : \"\"}           \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Skill 3</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setSkill3(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          { skill3Errors ? <p >{skill3Errors}</p> : \"\"} \r\n        </div>\r\n\r\n\r\n\r\n        <button className=\"btn btn-sm btn-success m-2 btn-outline\">Add Pet</button>\r\n      </form>\r\n      {/* <div className=\"d-flex col flex-column container p-3 my-3 bg-dark text-white\">\r\n                <p>Name: {name}</p>\r\n                <p>Age: {age}</p>\r\n                <p>Description: {description}</p>\r\n            </div> */}\r\n    </div>\r\n    </body>\r\n    \r\n  );\r\n};\r\n\r\nexport default NewPet;","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst PetList = (props) => {\r\n    const [allPets, setAllPets] = useState([]);\r\n    // const [pet, setPets] = useState([]);\r\n    // const [pets, setPetss] = useState([]);\r\n    // const history = useHistory();\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets/\")\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setAllPets(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    // Delete function in controller takes an ID and returns deleted\r\n    // Pass in the ID and and refresh the page with the deleted item filtered out\r\n    // We need to remove a value from state using filter\r\n    const deletePet = (e, petId) => {\r\n        axios.delete(\"http://localhost:8000/api/pets/\" + petId)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setAllPets(allPets.filter((pet) => pet._id !== petId));\r\n                // uses setallpets to access state and filter through our pet array and only return where the ID which we just passed to be deleted not in the list\r\n            }\r\n            )\r\n    }\r\n    // const routeChange = () =>{ \r\n    //     let path = `/${pet._id}/edit`; \r\n    //     history.push(path);\r\n    //   }\r\n    const handleLikeClick = (id, likes) => {\r\n        console.log(id, likes,\"hello\");\r\n        if (likes == undefined) {\r\n            likes = 0;\r\n        }\r\n        const editedPet = { like: likes + 1 };\r\n        \r\n            axios\r\n            .put(\"http://localhost:8000/api/pets/\" + id, editedPet)\r\n            .then((res) => {\r\n                const updatedPet = res.data;\r\n\r\n                const updatedPets = allPets.map((pet) => {\r\n                    if (pet._id === id) {\r\n                    return updatedPet;\r\n                } \r\n                return pet;\r\n           })\r\n                setAllPets(updatedPets);\r\n                console.log(\"liked\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <body>\r\n            <div className=\"d-flex col col-12 flex-column container p-3 my-3 bg-dark text-white rounded shadow shadow-lg table table-striped\">\r\n                <h3>These pets are looking for a good home</h3>\r\n                <table>\r\n                    <thead>\r\n                        <th>Name</th>\r\n                        <th>Age</th>\r\n                        <th>Type</th>\r\n                        <th>Actions / Likes</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* take the pets from state and map to each of the pets */}\r\n                        {\r\n                            allPets.map((pet, index) => (\r\n                                <tr>\r\n                                    <td><Link to={`/pets/${pet._id}`}> {pet.name} </Link></td>\r\n                                    <td> {pet.age}</td>\r\n                                    <td> {pet.type}</td>\r\n                                    <td>\r\n                                    <Link to={`/pets/${pet._id}`} className=\"btn btn-sm btn-primary m-2 btn-outline\">Details</Link>\r\n                                        {/* <button onClick={(e) => deletePet(e, pet._id)} className=\"btn btn-sm btn-primary m-2 btn-outline\">Details</button> */}\r\n                                        <Link to={`/pets/${pet._id}/edit`} className=\"btn btn-sm btn-warning m-2 btn-outline\">Edit</Link>\r\n                                        <button onClick= { (e) => deletePet(e, pet._id)} className=\"col col-23btn btn-sm btn-danger m-2 btn-outline\">Adopt {pet.name}</button>\r\n                                        <p onClick = {() => handleLikeClick(pet._id, pet.like)} className=\"btn btn-sm btn-success m-2 btn-outline\" style={{ cursor: \"pointer\" , outline: \"none\"}}> Like {pet.name} {pet.LikeCount}</p>\r\n                                        {/* <p onClick = {() => handleLikeClick(pet._id, pet.like)} style={{ cursor: \"pointer\" , outline: \"none\"}}> &#128175;{pet.LikeCount}</p> */}\r\n                                        {/* //&#x270B; */}\r\n                                    </td>\r\n                                    <td> {pet.like} </td>\r\n                                </tr>\r\n                            )\r\n                            )\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </body>\r\n    )\r\n};\r\n\r\nexport default PetList;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nconst Pet = (props) => {\r\n    const [pet, setPet] = useState(null);\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [allPets, setAllPets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/pets/${id}`)\r\n      .then((res) => {\r\n        setPet(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [id]);\r\n  // The response hasn't come back yet so we want to to return loading... so the user made aware\r\n  if (pet === null) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  const deletePet = (e, petId) => {\r\n    axios.delete(\"http://localhost:8000/api/pets/\" + petId)\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        history.push(`/pets/`);\r\n        // setAllPets(allPets.filter((pet) => pet._id !== petId)); \r\n        // uses setallpets to access state and filter through our pet array and only return where the ID which we just passed to be deleted not in the list\r\n    }\r\n    )\r\n}\r\nconst handleLikeClick = (id, likes) => {\r\n    console.log(id, likes);\r\n    if (likes == undefined) {\r\n        likes = 0;\r\n    }\r\n    const editedPet = { like: likes + 1 };\r\n    \r\n        axios\r\n        .put(\"http://localhost:8000/api/pets/\" + id, editedPet)\r\n        .then((res) => {\r\n            const updatedPet = res.data;\r\n\r\n            const updatedPets = allPets.map((pet) => {\r\n                if (pet._id === id) {\r\n                return updatedPet;\r\n            } \r\n            return pet;\r\n       })\r\n            setPet(updatedPet);\r\n            setAllPets(updatedPets);\r\n            console.log(\"liked\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n    return (\r\n    <div className=\"d-flex col col-12 flex-column container p-3 my-3 bg-dark text-white rounded shadow justify-text-center\">\r\n      <h1>Details about: {pet.name}</h1>\r\n      <h4 className= \"fst-italic\">Pet type: {pet.type}</h4>\r\n      <h3 className= \"fst-italic\">Description: {pet.description}</h3>\r\n      <br></br>\r\n      <h4 className= \"fst-italic\">Skills: {pet.skill1}, {pet.skill2}, {pet.skill3}</h4>\r\n      <h5>Age: {pet.age}</h5>\r\n      <img src=\"\" alt=\"\"></img>\r\n          <div className=\"d-flex\">\r\n          <button onClick= { (e) => deletePet(e, pet._id)} className=\"col col-2 btn btn-sm btn-danger m-2 btn-outline\">Adopt {pet.name}</button>\r\n          <Link to={`/pets/${pet._id}/edit`} className=\"col col-1 btn btn-sm btn-warning m-2 btn-outline\">Edit</Link>\r\n          <p onClick = {() => handleLikeClick(pet._id, pet.like)} className=\"btn btn-sm btn-success m-2 btn-outline\" style={{ cursor: \"pointer\" , outline: \"none\"}}> Like {pet.name} </p>\r\n          <p>Likes: {pet.like }</p>\r\n        \r\n        </div >\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pet;","import React, { useEffect, useState } from \"react\"; // Usestate the app knows when to render the data\r\nimport axios from \"axios\";\r\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst EditPet = (props) => {\r\n    const [pet, setPet] = useState(\"\");\r\n    const [errors, setErrors] = useState(null);\r\n    const history = useHistory(); //using history to keep track of the routes/pages you are going to so you can go back and forth\r\n    const { id } = useParams();\r\n    \r\n\r\n  /* \r\n  Empty arr as second argument means this will only happen on the first render\r\n  of this component.\r\n  */\r\n    // Get the data using UseEffect when the page first loads\r\n    // using axios to get the data so it is prefilled for the item/id that is selected\r\n    useEffect(() => {\r\n    axios\r\n        .get(`http://localhost:8000/api/pets/` + id)\r\n        .then((res) => {\r\n            setPet(res.data);\r\n    })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [id]);\r\n\r\n    const handleOnChange = (e) => {\r\n        const keyBeingUpdated = e.target.name;\r\n        const newValue = e.target.value;\r\n    \r\n        setPet({ ...pet, [keyBeingUpdated]: newValue });\r\n        \r\n        // Neil showed two ways one with setting each state, and one with\r\n        // combining into a handler since we will be passing an onject\r\n        /* The setDest above can be written like this: */\r\n        // const updatedDest = {...dest}\r\n        // updatedDest[keyBeingUpdated] = newValue;\r\n        // setDest(updatedDest)\r\n    };\r\n    \r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault(); \r\n        axios\r\n            .put(\"http://localhost:8000/api/pets/\" + pet._id + \"/edit\", pet)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            // Route user to the new destination's page.\r\n                history.push(`/pets/${pet._id}`);\r\n            })\r\n            .catch((err) => {\r\n            // THIS CATCH only triggers because our controller uses\r\n            // res.status(400).json(err);\r\n            setErrors(err.response.data.errors);\r\n            console.log(err.response);\r\n            });\r\n        };\r\n        if (pet === null) {\r\n            return \"Loading...\";\r\n        }\r\n        // using this for the Cancel button\r\n        const routeChange = () =>{ \r\n            let path = `/pets/`; \r\n            history.push(path); \r\n          }\r\n        return (\r\n        <div className=\"d-flex col col-8 flex-column container p-3 my-3 bg-dark text-white rounded shadow justify-text-center shadow\">\r\n            <h3 className=\"text-center\">Edit: {pet.name}</h3>\r\n            <form\r\n            onSubmit={(e) => {\r\n            handleEditSubmit(e);\r\n            }}\r\n        >\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Pet Name: </label>\r\n                {errors?.name && (\r\n                <span className=\"text-danger\"> {errors?.name?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={pet.name} // \"value\" triggering the change from state. putting in the value into the field\r\n                name=\"name\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Pet Type: </label>\r\n                {errors?.type && (\r\n                <span className=\"text-danger\"> {errors?.type?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={pet.type}\r\n                name=\"type\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Description: </label>\r\n                {errors?.description && (\r\n                <span className=\"text-danger\"> {errors?.description?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={pet.description}\r\n                name=\"description\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Age: </label>\r\n                {errors?.src && (\r\n                <span className=\"text-danger\"> {errors?.age?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={pet.age}\r\n                name=\"age\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Skill 1: </label>\r\n                {errors?.skill1 && (\r\n                <span className=\"text-danger\"> {errors?.skill1?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={pet.skill1}\r\n                name=\"skill1\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Skill 2: </label>\r\n                {errors?.skill2 && (\r\n                <span className=\"text-danger\"> {errors?.skill2?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={pet.skill2}\r\n                name=\"skill2\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Skill 3: </label>\r\n                {errors?.skill3 && (\r\n                <span className=\"text-danger\"> {errors?.skill3?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={pet.skill3}\r\n                name=\"skill3\"\r\n                />\r\n            </div>\r\n            \r\n            <button className=\"btn btn-sm btn-success m-2 btn-outline\">Update</button>\r\n            <button onClick ={routeChange} className=\"btn btn-sm btn-danger m-2 btn-outline\">Cancel</button>\r\n            </form>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default EditPet;","\nimport './App.css';\nimport { Link, Route, Switch, Redirect} from 'react-router-dom'\nimport NewPet from './Components/NewPet'\nimport PetList from './Components/PetList';\nimport OnePet from './Components/OnePet';\nimport EditPet from './Components/EditPet';\n// import NotFound from \"./views/NotFound\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <nav className=\" d-flex col col-8 flex-column container p-3 my-3 bg-dark text-white rounded shadow\">\n        <h1 className=\"fs-1 navbar-brand mb-0 mx-auto\">Pet Shelter</h1>\n        <div className=\"d-flex justify-content-center text-justify\">\n          <Link\n            to=\"/pets/\"\n            className=\"col col-2 btn btn-sm btn-success m-2 btn-outline \"\n          >\n            All Pets\n          </Link>\n\n          <Link\n            to=\"/pets/new\"\n            className=\"col col-3 btn btn-sm btn-success m-2 btn-outline\"\n          >\n            Add New Pet\n          </Link>\n        </div>\n      </nav>\n\n      <Switch>\n \n        <Redirect exact from=\"/\" to=\"/pets\" />\n        <Route exact path=\"/pets/new\">\n          <NewPet />\n        </Route>\n        <Route exact path=\"/pets/\">\n          <PetList />\n        </Route>\n        <Route exact path=\"/pets/:id\">\n          <OnePet />\n        </Route>\n        <Route exact path=\"/pets/:id/edit\">\n          <EditPet />\n        </Route>\n        {/* <Route component={NotFound} /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}